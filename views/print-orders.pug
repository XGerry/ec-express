extends templates/default

mixin tableRow(order)
	tr(onclick="openOrder('"+order._id+"', event)" class=order.rush ? 'rush text-white' : '')
		td
			input(type="checkbox", style="transform: scale(2);" order-id=order._id).order-check.ml-2
		td=order.orderId
		td(data-sort=moment(order.orderDate))=moment(order.orderDate).format('MMM Do - h:mm a')
		td(data-sort=moment(order.dueDate))=moment(order.dueDate).format('MMM Do')
		td=order.customer.name
		td=order.customer.companyName
		td=order.items.length
		td=order.items.reduce((total, item) => total + parseInt(item.quantity), 0)
		if (order.orderValue)
			td='$' + order.orderValue.toFixed(2)
		else
			td N/A

mixin orderTable(title, orders)
	h4=title
	p.lead= "There are " + orders.length + " orders."
	.summary-table
		table.table-hover.table#orderTable.table-striped
			thead
				tr
					th
					th Order Number
					th Order Date
					th Due Date
					th Customer Name
					th Company Name
					th Number of SKUs
					th Number of Items
					th Value of Order
			tbody#orderTableBody
				each order in orders
					+tableRow(order)

append nav-items-right
	button.btn-outline-primary.btn.mr-2(type="button")#customBatchButton Custom Batch
	select.form-control.px-1.py-0#batchType(style="width: 200px;")
		option(value="us") US
		option(value="ca") CA
		option(value="az") Amazon
	button.btn.btn-success.ml-2(type="button")#createBatchButton Auto Batch

append head
	title Create Batch

append body
	.row
		.col
			h3 Unpicked Orders
			p.lead Select and order to see it in more detail.
	.row
		- let usOrders = orders.filter(o => !o.canadian && !o.amazon)
		- let canOrders = orders.filter(o => o.canadian && !o.amazon)
		- let amazonOrders = orders.filter(o => o.amazon)
		.col
			+orderTable('US Orders', usOrders)
	.row
		.col.pt-2
			+orderTable('Canadian Orders', canOrders)
	.row
		.col.pt-2
			+orderTable('Amazon Orders', amazonOrders)

		script.
			$(document).ready(e => {
				$('#customBatchButton').click(e => {
					var orderIds = [];
					$('.order-check').each((i, obj) => {
						if ($(obj).is(':checked')) {
							orderIds.push($(obj).attr('order-id'));
						}
					});
					if (orderIds.length > 0) {
						axios.post('/api/batch/start/custom', {
							orders: orderIds
						}).then(response => {
							let batch = response.data;
							window.location = '/batch/print/'+batch.shortid;
						});
					}
				});

				//- $('#orderTable').dataTable({
				//- 	order: [[2, 'asc']],
				//- 	pageLength: 100
				//- });

				$('#createBatchButton').click(e => {
					let batchType = $('#batchType').val();
					console.log(batchType);
					axios.post('/api/batch/start/auto', {
						type: batchType,
						maxItems: 200,
						maxSkus: 100
					}).then(response => {
						let batch = response.data;
						window.location = '/batch/print/'+batch.shortid;
					}).catch(err => {
						console.log(err);
					});
				});
			});	

			function openOrder(id, e) {
				console.log(e);
				if (e.target.localName != 'input') {
					window.open('/order?id='+id, '_blank');
				}
			}

	include includes/end