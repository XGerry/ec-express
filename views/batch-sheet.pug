mixin pickTableRow(item, quantity)
	tr
		td.text-center
			strong=item.location
		td.text-center
			strong=item.sku
		td.text-center= quantity
		td.text-center
			input(type="checkbox", style="transform: scale(2);margin: 0;")
		if (item.isOption)
			td= item.parent.name + ' - ' + item.name
		else
			td= item.name
		td= item.usStock
		td.text-center= item.secondLocation

mixin orderSummaryTableRow(order)
	tr(onclick="window.open('/order?id="+order._id+"', '_blank')")
		td=order.orderId
		td=order.customer.name
		td=order.customer.companyName
		td=moment(order.orderDate).format('MMM Do')
		td=order.items.length
		td=order.items.reduce((total, item) => total + item.quantity, 0)

doctype html
include mixins
html
	include includes/head
		title Batch Sheet
	body
		#wrapper
			+sidebarNav("batch-sheet")

			#page-content
				+menuToggle
				.container.pt-3
					.row
						.col-12.text-center
							h2 Batch Picking Sheet
					.row.pt-2
						.col-8
							table.table-sm.table
								thead 
									tr 
										th Total Number of SKUs
										th Total Number of Items
										th Number of Orders
								tbody
									tr
										td=batch.numberOfSkus
										td=batch.numberOfItems
										td=batch.orders.length
						.col-4.text-center
							svg#barcode(jsbarcode-value=batch.shortid, jsbarcode-displayvalue="true", jsbarcode-width=1.5)
					.row.pt-2
						.col-12
							table.table-sm.table.table-hover
								thead
									tr
										th Order ID
										th Customer
										th Company
										th Date
										th Number of SKUs
										th Number of Items
								tbody
									- var hasComments = false;
									each order in batch.orders
										+orderSummaryTableRow(order)
					.row
						.col
							h1 Comments
					.row
						.col.pt-2
							table.table-sm.table
								thead
									tr
										th(width="10%") Order ID
										th Customer
										th Internal
										th Ship Method
								tbody
									each order in batch.orders
										if (order.cartOrder.CustomerComments || order.comments)
											tr
												td=order.orderId
												td=order.cartOrder.CustomerComments
												td=order.comments
												td= order.cartOrder.ShipmentList[0].ShipmentMethodName
					.row.pt-2
						table.table.table-striped.pick-table
							thead
								tr
									th.text-center(style="width:14%") Location
									th.text-center SKU
									th.text-center Quantity
									th.text-center Picked
									th(style="width:30%") Description
									th Stock Level
									th.text-center Location 2
							tbody
								-
									var allItems = batch.orders.reduce((arr, order) => {
										return arr.concat(order.items);
									}, []);
									let pickableItems = allItems.filter(item => !item.item.discontinued);
									let discontinuedItems = allItems.filter(item => item.item.discontinued);
									let sortFunction = (a, b) => {
										if (a.item.location == undefined) {
											a.item.location = '';
										}
										if (b.item.location == undefined) {
											b.item.location = '';
										}
										a.item.location = a.item.location.toUpperCase();
										b.item.location = b.item.location.toUpperCase();

										var aLocation = a.item.location.split('-');
										var bLocation = b.item.location.split('-');

										if (aLocation.length == 5 && bLocation.length == 5) {
											if (aLocation[0] < bLocation[0]) {
												return -1;
											} else if (aLocation[0] > bLocation[0]) {
												return 1;
											} else if (parseInt(aLocation[1]) < parseInt(bLocation[1])) {
												return -1;
											} else if (parseInt(aLocation[1]) > parseInt(bLocation[1])) {
												return 1;
											} else if (parseInt(aLocation[2]) < parseInt(bLocation[2])) {
												return -1;
											} else if (parseInt(aLocation[2]) > parseInt(bLocation[2])) {
												return 1;
											} else if (parseInt(aLocation[3]) < parseInt(bLocation[3])) {
												return -1;
											} else if (parseInt(aLocation[3]) > parseInt(bLocation[3])) {
												return 1;
											} else if (parseInt(aLocation[4]) < parseInt(bLocation[4])) {
												return -1;
											} else if (parseInt(aLocation[4]) > parseInt(bLocation[4])) {
												return 1;
											}
										}

										if (a.item.location < b.item.location) {
											return -1;
										} else	if (a.item.location > b.item.location) {
											return 1;
										}	else {
											if (a.item.sku < b.item.sku) {
												return -1;
											} else {
												return 1;
											}
										}
									}

									pickableItems.sort(sortFunction)
									discontinuedItems.sort(sortFunction)

									for (var i = 0; i < pickableItems.length; i++) {
										for (var j = 0; j < pickableItems.length; j++) {
											if (i != j) {
												if (pickableItems[i].item.sku == pickableItems[j].item.sku) {
													// found a duplicate
													pickableItems[i].quantity += pickableItems[j].quantity;
													// remove the duplicate
													pickableItems.splice(j, 1);
												}
											}
										}
									}

									for (var i = 0; i < discontinuedItems.length; i++) {
										for (var j = 0; j < discontinuedItems.length; j++) {
											if (i != j) {
												if (discontinuedItems[i].item.sku == discontinuedItems[j].item.sku) {
													// found a duplicate
													discontinuedItems[i].quantity += discontinuedItems[j].quantity;
													// remove the duplicate
													discontinuedItems.splice(j, 1);
												}
											}
										}
									}

								each item in pickableItems
									+pickTableRow(item.item, item.quantity)
					if (discontinuedItems.length > 0)
						.row
							h4 Discontinued Items
							table.table.table-striped.pick-table
								thead
									tr
										th.text-center(style="width:14%") Location
										th.text-center SKU
										th.text-center Quantity
										th.text-center Picked
										th(style="width:30%") Description
										th Stock Level
										th.text-center Location 2
								tbody
									each item in discontinuedItems
										+pickTableRow(item.item, item.quantity)
					if (heldOrders.length > 0)
						.row
							h4 Held Orders
							table.table.table-striped.table-hover
								thead
									tr
										th Order ID
										th Customer
										th Order Date
										th Hold Reason
								tbody
									each order in heldOrders
										tr(onclick="window.open('/orders/view/"+order._id+"', '_blank')")
											td=order.orderId
											td=order.customer.name
											td=moment(order.orderDate).format('MMM Do, YYYY')
											td=order.reasonForHold
		+footer
		script.
			JsBarcode('#barcode').init();
			console.log(!{JSON.stringify(batch)})