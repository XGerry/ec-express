doctype html
include mixins
html
	include includes/head
		title Sales Report
	body
		#wrapper
			+sidebarNav("orders")

			#page-content
				+menuToggle
				.starter-template
					h1 Sales
					p.lead Sales report over the past month

				.container
					.row
						.col
							p= retailOrders.length + ' retail orders since one month ago.'
							p= wholesaleOrders.length + ' wholesale orders since one month ago.'
					.row
						.col
							canvas#salesChart

		script.
			var retailOrders = !{JSON.stringify(retailOrders)};
			var wholesaleOrders = !{JSON.stringify(wholesaleOrders)};

			var today = moment();
			var firstDay = moment().subtract(1, 'month');
			firstDay.startOf('day');
			var daysApart = today.diff(firstDay, 'days');

			var labels = [];
			var retailData = [];
			var wholesaleData = [];
			for (var i = 0; i < daysApart; i++) {
				labels.push(firstDay.format());
				var retailDataPoint = {
					t: firstDay.format(),
					y: 0,
					label: firstDay.format('MMM Do')
				};
				var wholesaleDataPoint = {
					t: firstDay.format(),
					y: 0,
					label: firstDay.format('MMM Do')
				};
				for (var j = 0; j < retailOrders.length; j++) {
					if (firstDay.isSame(retailOrders[j].orderDate, 'day')) {
						retailDataPoint.y += retailOrders[j].orderProfit;
						// now remove the order
						retailOrders.splice(j, 1);
						j--;
					}	
				}
				for (var k = 0; k < wholesaleOrders.length; k++) {
					if (firstDay.isSame(wholesaleOrders[k].orderDate, 'day')) {
						wholesaleDataPoint.y += wholesaleOrders[k].orderProfit;
						wholesaleOrders.splice(k, 1);
						k--;
					}
				}
				retailData.push(retailDataPoint);
				wholesaleData.push(wholesaleDataPoint);
				firstDay.add(1, 'day');
			}

			var lineGraph = new Chart($('#salesChart'), {
				type: 'line',
				data: {
					labels: labels,
					datasets: [{
						label: 'Retail Sales',
						data: retailData,
						fill: false,
						borderColor: '#0074D9'
					}, {
						label: 'Wholesale Sales',
						data: wholesaleData,
						fill: false,
						borderColor: '#FF4136'
					}]
				},
				options: {
					scales: {
						xAxes: [{
							type: 'time',
							time: {
								unit: 'day'
							}
						}],
						yAxes: [{
							ticks: {
								min: 0
							}
						}]
					},
					tooltips: {
						callbacks: {
							title: function(items, data) {
								var label = data.datasets[items[0].datasetIndex].data[items[0].index].label;
								return label;
							},
							label: function(item, data) {
								var label = data.datasets[item.datasetIndex].label;
								label += ': $';
								label += item.yLabel.toFixed(2);
								return label;
							}
						}
					}
				}
			});

			$('#salesChart').click(e => {
				var activePoint = lineGraph.getElementAtEvent(e);
				// make sure click was on an actual point
			  if (activePoint.length > 0) {
			    var clickedDatasetIndex = activePoint[0]._datasetIndex;
			    var clickedElementindex = activePoint[0]._index;
			    var label = lineGraph.data.labels[clickedElementindex];
			    var value = lineGraph.data.datasets[clickedDatasetIndex].data[clickedElementindex];

			    window.open('/orders/on/'+value.t, '_blank');
			  }
			});
