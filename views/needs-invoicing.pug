extends templates/default

mixin orderRow(order)
  tr(onclick="orderSelected('"+order._id+"', event)" id="row-"+order._id)
    td=order.orderId
    td=order.customer.name
    td(data-sort=moment(order.orderDate))=moment(order.orderDate).format('MMM Do')
    td=order.customer.companyName
    td='$' + (order.subtotal + order.salesTax).toFixed(2)

append nav-items-right
  button.btn.btn-primary(type="button")#crossCheckButton Cross Check in QB

append head
  title Orders to be Invoiced

append body
  .container-fluid
    .row
      .col
        h2 US Orders
        p.lead= 'There are ' + usOrders.length + ' orders that need to be invoiced.'
        table.table.table-striped.table-hover#usOrderTable
          thead
            tr
              th Order ID
              th Name
              th Order Date
              th Company
              th Value
          tbody
            each order in usOrders
              +orderRow(order)

    .row.pt-2
      .col
        h2 Canadian Orders
        p.lead= 'There are ' + canOrders.length + ' orders that need to be invoiced.'
        table.table.table-striped.table-hover#canOrderTable
          thead
            tr
              th Order ID
              th Name
              th Order Date
              th Company
              th Value
          tbody
            each order in canOrders
              +orderRow(order)

  #orderModal.modal(tabindex="-1" role="dialog").fade
    .modal-dialog.modal-lg(role="document")
      .modal-content
        .modal-header
          h5#modalTitle
          button.close(type="button", data-dismiss="modal", aria-label="Close")
            span(aria-hidden="true") &times;
        .modal-body
          .row
            .col
              table.table-sm.table
                thead
                  tr
                    th Name
                    th Company Name
                    th Picked Total
                    th Shipping Cost
                    th Discount
                    th Sales Tax
                    th Grand Total
                tbody
                  tr
                    td#modalName
                    td#modalCompanyName
                    td#modalPickedTotal
                    td#modalShippingCost
                    td#modalDiscount
                    td#modalSalesTax
                    td#modalGrandTotal
                    
          .row
            .col
              table.table-sm.table
                thead
                  tr
                    th Payment Method
                    th Order Date
                    th Ship Date
                    th Items Sent
                    th Items Not Sent
                tbody
                  tr
                    td#modalPaymentMethod
                    td#modalOrderDate
                    td#modalShipDate
                    td#modalItemsSent
                    td#modalItemsNotSent
        .modal-footer
          button.btn-success.btn(type="button")#invoiceOrderButton Invoice
          a.btn-outline-secondary.btn(target="_blank")#viewOrder View Order
          a.btn-outline-secondary.btn(target="_blank")#viewOn3DCart View on 3D Cart
          button.btn-secondary.btn(type="button" data-dismiss="modal")#cancelItemButton Cancel

  script.
    var socket = io();
    let usOrders = !{JSON.stringify(usOrders)};
    let canOrders = !{JSON.stringify(canOrders)};
    let theOrder;

    $('#usOrderTable').DataTable({
      bDestroy: true,
      pageLength: 100,
      order: [[2, 'desc']]
    });

    $('#canOrderTable').DataTable({
      bDestroy: true,
      pageLength: 100,
      order: [[2, 'desc']]
    });

    $('#crossCheckButton').click(e => {
      socket.emit('crossCheckUninvoicedOrders', cb => {
        alert('Run the web connector!');
      });
    });

    $('#invoiceOrderButton').click(e => {
      socket.emit('invoiceOrder', theOrder._id, response => {
        $('#orderModal').modal('hide');
        $('#row-'+theOrder._id).addClass('rush');
      });
    });

    function orderSelected(id, e) {
      theOrder = _.find(canOrders, {_id: id});
      if (!theOrder) {
        theOrder = _.find(usOrders, {_id: id});
      }
      populateModalFields(theOrder);
      $('#orderModal').modal();
    }

    function populateModalFields(order) {
      if (!order.shippingCost)
        order.shippingCost = 0;
      $('#modalTitle').text(order.orderId);
      $('#modalName').text(order.customer.name);
      $('#modalCompanyName').text(order.customer.companyName);
      $('#modalGrandTotal').text('$' + (order.subtotal + order.salesTax).toFixed(2));
      $('#modalPickedTotal').text('$' + (order.pickedTotal).toFixed(2));
      $('#modalShippingCost').text('$' + order.shippingCost.toFixed(2));
      $('#modalSalesTax').text('$' + order.salesTax.toFixed(2));
      $('#modalDiscount').text('$' + order.discount.toFixed(2));
      $('#modalItemsSent').text(order.numberOfItemsPicked);
      $('#modalItemsNotSent').text(order.numberOfItems - order.numberOfItemsPicked);
      $('#modalOrderDate').text(moment(order.orderDate).format('MMM Do, YYYY'));
      $('#modalPaymentMethod').text(order.paymentMethod);
      $('#modalShipDate').text(moment(order.shipDate).format('MMM Do, YYYY'));
      $('#viewOrder').prop('href', '/orders/view/'+order._id);
      $('#viewOn3DCart').prop('href', "https://www.ecstasycrafts." + (order.canadian ? "ca" : "com") + "/admin/order_details.asp?orderid="+order.cartOrder.OrderID);
    }

