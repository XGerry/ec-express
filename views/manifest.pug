doctype html
include mixins
html
  include includes/head
  title Manifest
  
  body
    #wrapper
      +sidebarNav("list-manifests")

      #page-content
        nav.navbar.navbar-light.bg-light.navbar-expand-sm.sticky-top
          button.btn.btn-secondary.btn-toggles(type="button").m-0.position-relative#left-menu-toggle
            i.far.fa-bars.fa-fw
          span.navbar-brand.mb-0.h1.pl-2= "SEC-321 - " + moment(shipDate).utc().format('MMMM Do')
          ul.navbar-nav.ml-auto
            button.btn-primary.btn.mr-2(type="button")#downloadButton Download CSV
                    
        .container
          .row.pt-5
            .col
              p= "There are " + orders.length + " orders on the manifest"
          -
            let htcs = [];
            function generateHTCMap(order) {
              // standardize the order and the items first
              var totalValue = 0;
              var totalItems = 0;
              var sentItems = order.items.filter(item => {
                if (item.pickedQuantity > 0) {
                  if (item.item.htcCode)
                    item.item.htcCode = item.item.htcCode.replace(/\./g, ' ');
                  else
                    item.item.htcCode = '9503 00 00 90';
                  if (item.item.countryOfOrigin)
                    item.item.countryOfOrigin = item.item.countryOfOrigin.toUpperCase();
                  else
                    item.item.countryOfOrigin = 'CHINA';
                  totalValue += item.pickedQuantity * item.price;
                  totalItems += item.pickedQuantity;
                  return true;
                }
              });
              var pricePerItem = 0;
              if (totalValue >= 800) {
                pricePerItem = 794.86 / totalItems;
              }

              let htcMap = {};
              sentItems.forEach((orderItem) => {
                let item = orderItem.item;
                if (!htcMap.hasOwnProperty(item.htcCode)) {
                  htcMap[item.htcCode] = {};
                }
                var htcObj = htcMap[item.htcCode];
                if (!htcObj.hasOwnProperty(item.countryOfOrigin)) {
                  htcObj[item.countryOfOrigin] = {
                    quantity: 0,
                    value: 0,
                    weight: 0,
                    description: 'Craft Dies'
                  };
                }
                htcMap[item.htcCode][item.countryOfOrigin].quantity += orderItem.pickedQuantity;
                if (totalValue >= 800) {
                  htcMap[item.htcCode][item.countryOfOrigin].value += orderItem.pickedQuantity * pricePerItem;
                } else {
                  htcMap[item.htcCode][item.countryOfOrigin].value += orderItem.pickedQuantity * orderItem.price;
                }
                htcMap[item.htcCode][item.countryOfOrigin].weight += item.weight;
                totalValue
              });
              return htcMap;
            }
          each order in orders
            .row.pt-2
              .col-2
                - let shipmentAddress = order.cartOrder.ShipmentList[0];
                strong=shipmentAddress.ShipmentFirstName + ' ' + shipmentAddress.ShipmentLastName
                br
                =shipmentAddress.ShipmentAddress
                if (shipmentAddress.ShipmentAddress2)
                  br 
                  = shipmentAddress.ShipmentAddress2
                br
                =shipmentAddress.ShipmentCity + ', ' + shipmentAddress.ShipmentState
                br
                =shipmentAddress.ShipmentZipCode
                br
                =shipmentAddress.ShipmentCountry
              .col
                -
                  let htcMap = generateHTCMap(order);
                  htcs.push({
                    htcMap: htcMap,
                    order: order
                  });
                table.table.table-sm
                  thead
                    tr
                      th Description
                      th Code
                      th Country of Origin
                      th Quantity
                      th Value
                      th Weight
                  tbody
                    each code in Object.keys(htcMap)
                      each country in Object.keys(htcMap[code])
                        tr
                          td=htcMap[code][country].description
                          td=code
                          td=country
                          td=htcMap[code][country].quantity
                          td="$" + htcMap[code][country].value.toFixed(2)
                          td=htcMap[code][country].weight.toFixed(2) + ' lbs'
    +footer

    script.
      var htcs = !{JSON.stringify(htcs)};
      var shipDate = !{JSON.stringify(shipDate)};
      console.log(htcs);

      $('#downloadButton').click(e => {
        var file = 'provinceOfLoading,ShipperName,ShipperADDR1,ShipperCity,ShipperProvince,ShipperPC,ConName,ConsADDR1,ConsADDR2,ConsCity,ConsState,ConsPC,PartNum,description,quantity,packagingUnit,weight,weightUnit,harmonizedCode,value,countryOfOrigin\r\n';
        
        htcs.forEach(order => {
          Object.keys(order.htcMap).forEach(code => {
            Object.keys(order.htcMap[code]).forEach(country => {
              console.log(country);
              var line = '';
              line += 'ON,';
              line += 'Ecstasy Crafts,';
              line += '630 Shannonville Rd.,';
              line += 'Shannonville,';
              line += 'ON,';
              line += 'K0K 3A0,';
              var shipmentList = order.order.cartOrder.ShipmentList[0];
              line += shipmentList.ShipmentFirstName + ' ' + shipmentList.ShipmentLastName + ',';
              line += shipmentList.ShipmentAddress + ',';
              line += shipmentList.ShipmentAddress2 + ',';
              line += shipmentList.ShipmentCity + ',';
              line += shipmentList.ShipmentState + ',';
              line += shipmentList.ShipmentZipCode + ',';
              line += ',';
              line += order.htcMap[code][country].description + ',';
              line += order.htcMap[code][country].quantity + ',';
              line += 'PCS,';
              line += order.htcMap[code][country].weight.toFixed(2) + ',';
              line += 'LBS,';
              line += code + ',';
              line += order.htcMap[code][country].value.toFixed(2) + ',';
              line += country + '\r\n';
              file += line;
            });
          });
        });

        var blob = new Blob([file], { type: 'text/csv;charset=utf-8;' });
        var a = document.createElement("a");
        document.body.appendChild(a);
        a.style = "display: none";
        var url = window.URL.createObjectURL(blob);
        a.href = url;
        a.download = "sec-321-" + moment(shipDate).utc().format('YYYY-MM-DD') + ".csv";
        a.click();
        window.URL.revokeObjectURL(url);
      });