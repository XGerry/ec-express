doctype html
include mixins
html
  include includes/head
  title Manifest
  
  body
    #wrapper
      +sidebarNav("list-manifests")

      #page-content
        nav.navbar.navbar-light.bg-light.navbar-expand-sm.sticky-top
          button.btn.btn-secondary.btn-toggles(type="button").m-0.position-relative#left-menu-toggle
            i.far.fa-bars.fa-fw
          span.navbar-brand.mb-0.h1.pl-2= "SEC-321 - " + moment(shipDate).utc().format('MMMM Do')
          ul.navbar-nav.ml-auto
            button.btn-primary.btn.mr-2(type="button")#downloadButton Download CSV
                    
        .container
          .row.pt-5
            .col
              p= "There are " + orders.length + " orders on the manifest"
          -
            let htcs = [];
            function generateHTCMap(order) {
              // standardize the order and the items first
              var totalValue = 0;
              var totalItems = 0;
              var sentItems = order.items.filter(item => {
                if (item.pickedQuantity > 0) {
                  if (!item.item) {
                    console.log(order.orderId + ' order has an invalid item');
                    return false;
                  }
                  if (item.item.htcCode) {
                    item.item.htcCode = item.item.htcCode.replace(/\./g, '');
                    item.item.htcCode = item.item.htcCode.replace(/\ /g, '');
                  } else {
                    item.item.htcCode = '9503000090';
                  }
                  if (item.item.countryOfOrigin) {
                    // standardize the country
                    let country = item.item.countryOfOrigin.toUpperCase();
                    if (country == 'CHINA' || country == 'CN') {
                      country = 'CN';
                    } else if (country == 'CANADA' || country == 'CA') {
                      country = 'CA';
                    } else if (country == 'USA' || country == 'UNITED STATES' || country == 'UNITED STATES OF AMERICA' || country == 'US') {
                      country = 'US';
                    } else if (country == 'HOLLAND' || country == 'THE NETHERLANDS' || country == 'NL') {
                      country = 'NL';
                    } else if (country == 'AUSTRALIA' || country == 'AU') {
                      country = 'AU';
                    } else if (country == 'TAIWAN' || country == 'TW') {
                      country = 'TW';
                    } else if (country == 'UNITED KINGDOM' || country == 'ENGLAND' || country == 'UK' || country == 'GB') {
                      country = 'GB';
                    } else if (country == 'FRANCE' || country == 'FR') {
                      country = 'FR';
                    } else if (country == 'GERMANY' || country == 'DE') {
                      country = 'DE';
                    } else if (country == 'KOREA' || country == 'KR') {
                      country = 'KR';
                    } else if (country == 'BELGIUM' || country == 'BELGUIM' || country == 'BE') {
                      country = 'BE';
                    }
                    else {
                      console.log('No standardized code for the country: ' + country);
                      country = 'CN'; // default to china
                    }
                    item.item.countryOfOrigin = country;
                  } else {
                    item.item.countryOfOrigin = 'CN';
                  }
                  totalValue += item.pickedQuantity * item.price;
                  totalItems += item.pickedQuantity;
                  return true;
                }
              });
              var pricePerItem = 0;
              if (totalValue >= 800) {
                let randomOrderTotal = Math.random() * (799.87 - 750) + 750;
                pricePerItem = randomOrderTotal / totalItems;
              }

              let htcMap = {};
              sentItems.forEach((orderItem) => {
                let item = orderItem.item;
                if (!htcMap.hasOwnProperty(item.countryOfOrigin)) {
                  htcMap[item.countryOfOrigin] = {
                    quantity: 0,
                    value: 0,
                    weight: 0,
                    description: 'Craft & Hobby Supplies'
                  };
                }
                htcMap[item.countryOfOrigin].quantity += orderItem.pickedQuantity;
                if (totalValue >= 800) {
                  orderItem.price = pricePerItem;
                  htcMap[item.countryOfOrigin].value += orderItem.pickedQuantity * pricePerItem;
                } else {
                  htcMap[item.countryOfOrigin].value += orderItem.pickedQuantity * orderItem.price;
                }
                if (item.weight == undefined || item.weight <= 0) {
                  htcMap[item.countryOfOrigin].weight += 0.1; // default
                } else {
                  htcMap[item.countryOfOrigin].weight += item.weight;
                }
              });

              return htcMap;
            }
          each order in orders
            .row.pt-2
              .col
                - let shipmentAddress = order.cartOrder.ShipmentList[0];
                strong=shipmentAddress.ShipmentFirstName + ' ' + shipmentAddress.ShipmentLastName
                if (shipmentAddress.ShipmentCompany)
                  br
                  strong=shipmentAddress.ShipmentCompany
                br
                =shipmentAddress.ShipmentAddress
                if (shipmentAddress.ShipmentAddress2)
                  br 
                  = shipmentAddress.ShipmentAddress2
                br
                =shipmentAddress.ShipmentCity + ', ' + shipmentAddress.ShipmentState
                br
                =shipmentAddress.ShipmentZipCode
                br
                =shipmentAddress.ShipmentCountry
              .col
                h5=order.orderId
            .row
              .col
                -
                  let htcMap = generateHTCMap(order);
                  htcs.push({
                    htcMap: htcMap,
                    order: order
                  });
                //table.table.table-sm
                  thead
                    tr
                      th Description
                      th Country of Origin
                      th Quantity
                      th Value
                      th Weight
                  tbody
                    each country in Object.keys(htcMap)
                      tr
                        td=htcMap[country].description
                        td=country
                        td=htcMap[country].quantity
                        td="$" + htcMap[country].value.toFixed(2)
                        td=htcMap[country].weight.toFixed(2) + ' lbs'
                table.table.table-table-sm
                  thead
                    tr
                      th SKU
                      th Name
                      th Quantity
                      th Price
                      th Line Total
                  tbody
                    - let orderTotal = 0;
                    each item in order.items
                      if (item.pickedQuantity > 0)
                        tr
                          td=item.item.sku
                          td=item.item.name
                          td=item.pickedQuantity
                          td='$' + item.price.toFixed(2)
                          - let lineTotal = (item.price * item.pickedQuantity);
                          td='$' + lineTotal.toFixed(2)
                        - orderTotal += lineTotal;
                    tr
                      td
                      td
                      td
                      th Total
                      th='$' + orderTotal.toFixed(2)
            .pagebreak
    +footer

    script.
      var htcs = !{JSON.stringify(htcs)};
      var shipDate = !{JSON.stringify(shipDate)};
      console.log(htcs);

      $('#downloadButton').click(e => {
        var file = 'Carrier,SCN,provinceOfLoading,ShipperName,ShipperADDR1,ShipperADDR2,ShipperCity,ShipperProvince,ShipperPC,ConName,ConsADDR1,ConsADDR2,ConsCity,ConsState,ConsPC,PartNum,description,quantity,packagingUnit,weight,weightUnit,harmonizedCode,value,countryOfOrigin\r\n';
        
        htcs.forEach(order => {
          Object.keys(order.htcMap).forEach(country => {
            var line = '';
            line += 'DANQ,';
            line += '31788040531,';
            line += 'ON,';
            line += 'Ecstasy Crafts,';
            line += '630 Shannonville Rd.,';
            line += ',';
            line += 'Shannonville,';
            line += 'ON,';
            line += 'K0K 3A0,';
            var shipmentList = order.order.cartOrder.ShipmentList[0];
            line += shipmentList.ShipmentFirstName + ' ' + shipmentList.ShipmentLastName + ',';
            line += '"' + shipmentList.ShipmentAddress + '",';
            line += '"' + shipmentList.ShipmentAddress2 + '",';
            line += shipmentList.ShipmentCity + ',';
            line += shipmentList.ShipmentState + ',';
            line += '"' + shipmentList.ShipmentZipCode + '",';
            line += ',';
            line += order.htcMap[country].description + ',';
            line += order.htcMap[country].quantity + ',';
            line += 'PCS,';
            line += order.htcMap[country].weight.toFixed(2) + ',';
            line += 'LBS,';
            line += ',';
            line += order.htcMap[country].value.toFixed(2) + ',';
            line += country + '\r\n';
            file += line;
          });
        });

        var blob = new Blob([file], { type: 'text/csv;charset=utf-8;' });
        var a = document.createElement("a");
        document.body.appendChild(a);
        a.style = "display: none";
        var url = window.URL.createObjectURL(blob);
        a.href = url;
        a.download = "sec-321-" + moment(shipDate).utc().format('YYYY-MM-DD') + ".csv";
        a.click();
        window.URL.revokeObjectURL(url);
      });